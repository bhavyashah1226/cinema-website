// Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-3.5-turbo

package com.team.backend;

import org.bson.types.ObjectId;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;

import javax.validation.Valid;
import java.util.ArrayList;
import java.util.List;

@SpringBootTest
public class Controller_createScreen_33abd0691b_Test {

    @Mock
    private ScreenRepository repository;

    @InjectMocks
    private Controller controller;

    @Test
    public void testCreateScreen_Success() {
        // Arrange
        Screen screen = new Screen();
        screen.setName("Test Screen");

        // Mock the repository save method
        Mockito.when(repository.save(Mockito.any(Screen.class))).thenReturn(screen);

        // Act
        Screen result = controller.createScreen(screen);

        // Assert
        Assertions.assertNotNull(result);
        Assertions.assertEquals(screen.get_id(), result.get_id());
        Assertions.assertEquals(screen.getName(), result.getName());
    }

    @Test
    public void testCreateScreen_InvalidInput() {
        // Arrange
        Screen screen = new Screen();
        screen.setName("");

        // Act
        ResponseEntity<Error> response = controller.createScreen(screen);

        // Assert
        Assertions.assertNotNull(response);
        Assertions.assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
        Assertions.assertEquals("Invalid input", response.getBody().getMessage());
    }
}

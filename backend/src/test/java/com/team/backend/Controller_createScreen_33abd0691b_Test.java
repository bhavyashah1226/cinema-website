// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

package com.team.backend;

import org.bson.types.ObjectId;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit4.SpringRunner;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.BDDMockito.given;

@RunWith(SpringRunner.class)
@SpringBootTest
public class Controller_createScreen_33abd0691b_Test {

    @Autowired
    private ScreenController screenController;

    @MockBean
    private ScreenRepository screenRepository;
    
    @Test
    public void testCreateScreen() {
        Screen screen = new Screen();
        screen.setId(new ObjectId());
        given(screenRepository.save(screen)).willReturn(screen);

        Screen createdScreen = screenController.createScreen(screen);

        assertThat(createdScreen).isNotNull();
        assertThat(createdScreen.getId()).isEqualTo(screen.getId());
    }

    @Test
    public void testCreateScreen_NullScreen() {
        Screen screen = null;

        try {
            screenController.createScreen(screen);
        } catch (Exception ex) {
            assertThat(ex).isInstanceOf(NullPointerException.class);
        }
    }

    @Test
    public void testCreateScreen_InvalidScreen() {
        Screen screen = new Screen();
        screen.setTitle("this is a title with more than 50 characters which is invalid according to our terms and conditions.");

        try {
            screenController.createScreen(screen);
        } catch (Exception ex) {
            assertThat(ex).isInstanceOf(InvalidInputException.class);
        }
    }
}

// ********RoostGPT********
/*
Test generated by RoostGPT for test restAssuredJan24 using AI Type Open AI and AI Model gpt-4

1. Scenario: Check if the function properly updates the status of `seatBooked` when a true value is passed. 
   Test Steps: 
   - Create a new instance of the containing class
   - Call the `setSeatBooked` method with argument `true`
   - Verify that `seatBooked` is now `true`

2. Scenario: Check if the function properly updates the status of `seatBooked` when a false value is passed. 
   Test Steps: 
   - Create a new instance of the containing class
   - Call the `setSeatBooked` method with argument `false`
   - Verify that `seatBooked` is now `false`

3. Scenario: Check if the function properly updates the status of `seatBooked` from true to false.
   Test Steps: 
   - Create a new instance of the containing class
   - Call the `setSeatBooked` method with argument `true`
   - Call the `setSeatBooked` method again with argument `false`
   - Verify that `seatBooked` is now `false`

4. Scenario: Check if the function properly updates the status of `seatBooked` from false to true.
   Test Steps: 
   - Create a new instance of the containing class
   - Call the `setSeatBooked` method with argument `false`
   - Call the `setSeatBooked` method again with argument `true`
   - Verify that `seatBooked` is now `true`

5. Scenario: Check the default state of `seatBooked` before the `setSeatBooked` method is called.
   Test Steps: 
   - Create a new instance of the containing class
   - Verify that the initial state of `seatBooked` meets the expected default value

6. Scenario: Check the function's behavior when it's called multiple times with the same argument.
   Test Steps: 
   - Create a new instance of the containing class
   - Call the `setSeatBooked` method with argument `true`
   - Call the `setSeatBooked` method again with argument `true`
   - Verify that `seatBooked` remains `true`
*/

// ********RoostGPT********
package com.team.backend;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class Screen_setSeatBooked_446a113875_Test {

    @Test
    public void testSetSeatBookedTrue() {
        Screen screen = new Screen();
        screen.setSeatBooked(true);
        assertTrue(screen.isSeatBooked());
    }

    @Test
    public void testSetSeatBookedFalse() {
        Screen screen = new Screen();
        screen.setSeatBooked(false);
        assertFalse(screen.isSeatBooked());
    }

    @Test
    public void testSetSeatBookedTrueToFalse() {
        Screen screen = new Screen();
        screen.setSeatBooked(true);
        screen.setSeatBooked(false);
        assertFalse(screen.isSeatBooked());
    }

    @Test
    public void testSetSeatBookedFalseToTrue() {
        Screen screen = new Screen();
        screen.setSeatBooked(false);
        screen.setSeatBooked(true);
        assertTrue(screen.isSeatBooked());
    }

    @Test
    public void testSetSeatBookedDefault() {
        Screen screen = new Screen();
        assertFalse(screen.isSeatBooked());
    }

    @Test
    public void testSetSeatBookedSameValue() {
        Screen screen = new Screen();
        screen.setSeatBooked(true);
        screen.setSeatBooked(true);
        assertTrue(screen.isSeatBooked());
    }

}

// Test generated by RoostGPT for test roostPostmanTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

package com.team.backend;

import org.bson.types.ObjectId;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;

@SpringBootTest
public class Controller_getAllScreens_b85a4c05e8_Test {

    @Autowired
    private ScreenController screenController;

    @MockBean
    private ScreenRepository screenRepository;

    @BeforeEach
    public void setUp() {
        Screen screen1 = new Screen();
        screen1.set_id(ObjectId.get());
        Screen screen2 = new Screen();
        screen2.set_id(ObjectId.get());

        List<Screen> screenList = Arrays.asList(screen1, screen2);

        when(screenRepository.findAll()).thenReturn(screenList);
    }

    @Test
    public void testGetAllScreens() {
        List<Screen> screens = screenController.getAllScreens();

        assertNotNull(screens);
        assertEquals(2, screens.size());
    }

    @Test
    public void testGetAllScreensWhenNoRecordFound() {
        when(screenRepository.findAll()).thenReturn(null);

        List<Screen> screens = screenController.getAllScreens();
        
        assertEquals(0, screens.size());
    }
}

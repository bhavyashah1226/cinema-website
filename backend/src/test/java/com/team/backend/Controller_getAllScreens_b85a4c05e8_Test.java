// Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-3.5-turbo

package com.team.backend;

import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;
import org.junit.Assert;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ContextConfiguration;

import java.util.ArrayList;
import java.util.List;

@SpringBootTest
@ContextConfiguration(classes = {Controller_getAllScreens_b85a4c05e8_Test.class})
public class Controller_getAllScreens_b85a4c05e8_Test {
    
    @Autowired
    private ScreenRepository repository;
    
    private List<Screen> screens;
    
    @Mock
    private ScreenRepository mockRepository;
    
    @Given("^there are screens in the repository$")
    public void thereAreScreensInTheRepository() {
        screens = new ArrayList<>();
        screens.add(new Screen("Screen 1"));
        screens.add(new Screen("Screen 2"));
        screens.add(new Screen("Screen 3"));
        
        MockitoAnnotations.initMocks(this);
        Mockito.when(repository.findAll()).thenReturn(screens);
    }
    
    @Given("^the repository is empty$")
    public void theRepositoryIsEmpty() {
        screens = new ArrayList<>();
        
        MockitoAnnotations.initMocks(this);
        Mockito.when(repository.findAll()).thenReturn(screens);
    }
    
    @When("^I call the getAllScreens method$")
    public void iCallTheGetAllScreensMethod() {
        screens = repository.findAll();
    }
    
    @Then("^I should get a list of screens$")
    public void iShouldGetAListOfScreens() {
        Assert.assertEquals(screens.size(), 3);
        Assert.assertEquals(screens.get(0).getName(), "Screen 1");
        Assert.assertEquals(screens.get(1).getName(), "Screen 2");
        Assert.assertEquals(screens.get(2).getName(), "Screen 3");
    }
    
    @Then("^I should get an empty list$")
    public void iShouldGetAnEmptyList() {
        Assert.assertEquals(screens.size(), 0);
    }
}

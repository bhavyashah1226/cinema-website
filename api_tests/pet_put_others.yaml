# Test generated by RoostGPT for test roostPostmanTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

# RoostTestHash=a21296b4f6

config:
  target: "{{ $processEnvironment.API_HOST }}" 
  plugins:
    expect: {}
  payload:
    path: "pet_put_others.csv"
    fields:
      - "id"
      - "name"
      - "photoUrl"
      - "tagId"
    skipHeader: true
  processor: "./lib/processor.js"
  phases:
    - duration: 300
      arrivalRate: 5
scenarios: 
  - name: "Update existing pet"
    flow:
      - log: "Invalid ID passed to API"
        put:
          url: "/pet"
          json:
            id: "invalidID"
            name: "{{$payload.name}}"
            photoUrls: [ "{{$payload.photoUrl}}" ]
            tags: 
              - id: "{{$payload.tagId}}"
          headers: 
            Authorization: "{{ $processEnvironment.AUTH_TOKEN_INVALID }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
            - equals: 
              - "{{ $response.body.message }}"
              - "Invalid ID supplied"
        think: 2
      - log: "Pet not found due to non existent id"
        put:
          url: "/pet"
          json:
            id: "nonExistentID"
            name: "{{$payload.name}}"
            photoUrls: [ "{{$payload.photoUrl}}" ]
            tags: 
              - id: "{{$payload.tagId}}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - hasProperty: "message"
            - equals: 
              - "{{ $response.body.message }}"
              - "Pet not found"
        think: 2
      - log: "Invalid URL test"
        put:
          url: "/invalid/url"
          json:
            id: "{{ $payload.id }}"
            name: "{{$payload.name}}"
            photoUrls: [ "{{$payload.photoUrl}}" ]
            tags: 
              - id: "{{$payload.tagId}}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
        think: 2
      - log: "Invalid auth token test"
        put:
          url: "/pet"
          json:
            id: "{{ $payload.id }}"
            name: "{{$payload.name}}"
            photoUrls: [ "{{$payload.photoUrl}}" ]
            tags: 
              - id: "{{$payload.tagId}}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN_INVALID }}"
          expect:
            - statusCode: 401
        think: 2
      - log: "Validation exception due to schema error test"
        put:
          url: "/pet"
          json:
            id: "{{ $payload.id }}"
            name: null
            photoUrls: [ "{{$payload.photoUrl}}" ]
            tags: 
              - id: "{{$payload.tagId}}"
          headers: 
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 405
            - hasProperty: "message"
            - equals:
              - "{{ $response.body.message }}"
              - "Validation exception"

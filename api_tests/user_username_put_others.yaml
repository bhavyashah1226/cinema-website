# Test generated by RoostGPT for test roostPostmanTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

# RoostTestHash=f6e646c39e

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 10
  payload:
    path: "user_username_put_others.csv"
    fields:
      - "id"
      - "username"
      - "firstName"
      - "lastName"
      - "email"
      - "password"
      - "phone"
      - "userStatus"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "UPLOAD_User_Invalid_Tests"
    flow:
      - think: 5
      - log: "Testing invalid user endpoints"
      - put:
          url: "/user/NonExistingUser"
          headers:
            Authorization: "Bearer INVALID_TOKEN"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 400
            - hasProperty: "description"
            - equals: "Invalid user supplied"
      - log: "Invalid User Test: Expected 400, and Error Message: INVALID USER SUPPLIED"
      - think: 5
      - put:
          url: "/user/InvalidEndpoint"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 404
      - log: "Invalid URL Test: Expected 404"
      - think: 5
      - put:
          url: "/user/{{ username }}"
          headers:
            Authorization: "Bearer INVALID_TOKEN"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 401
      - log: "Invalid Authorization Test: Expected 401"

# Test generated by RoostGPT for test api-spec using AI Type Open AI and AI Model gpt-4


# Test generated for /user/{username}_put for http method type PUT in artillery framework

# RoostTestHash=f6e646c39e


config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "user_username_put_others.csv"
    fields:
      - "username"
      - "id"
      - "firstName"
      - "lastName"
      - "email"
      - "password"
      - "phone"
      - "userStatus"
    skipHeader: true

scenarios:
  - name: "Test non-successful API responses"
    flow:
      # Testing a PUT request with an invalid URL
      - put:
          url: "/v3/user/{{ username }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 404
        think: 1

      # Testing a PUT request with a missing required field in the payload
      - put:
          url: "/v2/user/{{ username }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 400
        think: 1

      # Testing a PUT request with an invalid authorization token
      - put:
          url: "/v2/user/{{ username }}"
          headers:
            Authorization: "Bearer invalid_token"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 401
        think: 1

      # Testing a PUT request with a non-existing user
      - put:
          url: "/v2/user/non_existing_user"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            username: "non_existing_user"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 404
        think: 1

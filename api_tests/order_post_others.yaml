# Test generated by RoostGPT for test roostPostmanTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

# RoostTestHash=036bac41de

config:
  target: "{{ $processEnvironment.API_HOST }}"
  overrideHeaders: true
  plugins:
    expect: {}
  payload:
    path: "order_post_others.csv"
    fields: ["id", "petId", "quantity", "shipDate", "status", "complete"]
    skipHeader: true
scenarios:
  - name: "Place an order for a pet test scenarios"
    flow:
      - log: "Invalid payload: Missing petId"
        post:
          url: "/store/order"
          headers:
            authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            quantity: "{{ quantity }}"
            shipDate: "{{ shipDate }}"
            status: "{{ status }}"
            complete: "{{ complete }}"
          expect:
            statusCode: 400
            body:
              error: "Invalid Order"
      - think:  1

      - log: "Invalid payload: Empty Quantity"
        post:
          url: "/store/order"
          headers:
            authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            petId: "{{ petId }}"
            quantity: ""
            shipDate: "{{ shipDate }}"
            status: "{{ status }}"
            complete: "{{ complete }}"
          expect:
            statusCode: 400
            body:
              error: "Invalid Order"
      - think:  1

      - log: "Invalid URL"
        post:
          url: "/wrong/url"
          headers:
            authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            petId: "{{ petId }}"
            quantity: "{{ quantity }}"
            shipDate: "{{ shipDate }}"
            status: "{{ status }}"
            complete: "{{ complete }}"
          expect:
            statusCode: 404
      - think:  1

      - log: "Unauthorized Request"
        post:
          url: "/store/order"
          headers:
            authorization: "Invalid Auth Token"
          json:
            id: "{{ id }}"
            petId: "{{ petId }}"
            quantity: "{{ quantity }}"
            shipDate: "{{ shipDate }}"
            status: "{{ status }}"
            complete: "{{ complete }}"
          expect:
            statusCode: 401

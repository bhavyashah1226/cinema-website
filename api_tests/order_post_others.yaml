# Test generated by RoostGPT for test roostPostmanTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

# RoostTestHash=036bac41de

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "order_post_others.csv"
    fields: ["id", "petId", "quantity", "shipDate", "status", "complete"]
    skipHeader: true
  plugins:
    expect: {}
scenarios:
  - name: "Place order API failure and edge cases tests"
    flow:
      - log: "Sending request with incorrect URL to test error handling"
        post:
          url: "/store/order/incorret_url"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            petId: "{{ petId }}"
            quantity: "{{ quantity }}"
            shipDate: "{{ shipDate }}"
            status: "{{ status }}"
            complete: "{{ complete }}"
        expect:
          - statusCode: 404 # Expecting a 404 error here
      - think: 1
      - log: "Sending request without necessary authorization header"
        post:
          url: "/store/order"
          json:
            id: "{{ id }}"
            petId: "{{ petId }}"
            quantity: "{{ quantity }}"
            shipDate: "{{ shipDate }}"
            status: "{{ status }}"
            complete: "{{ complete }}"
        expect:
          - statusCode: 401 # Expecting a 401 unauthorized error
      - think: 1
      - log: "Sending request with invalid payload data"
        post:
          url: "/store/order"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "invalid_id"
            petId: "{{ petId }}"
            quantity: "{{ quantity }}"
            shipDate: "{{ shipDate }}"
            status: "{{ status }}"
            complete: "{{ complete }}"
        expect:
          - statusCode: 400 # Expecting a 400 Bad Request error
      - think: 1
      - log: "Sending request with missing payload data"
        post:
          url: "/store/order"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            petId: "{{ petId }}"
            quantity: "{{ quantity }}"
            shipDate: "{{ shipDate }}"
            status: "{{ status }}"
            complete: "{{ complete }}"
        expect:
          - statusCode: 400 # Expecting a 400 Bad Request error

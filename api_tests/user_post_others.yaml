# Test generated by RoostGPT for test roostPostmanTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

# RoostTestHash=fcaadbca4d

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 10
  payload:
    path: "user_post_others.csv"
    fields:
      - "id"
      - "username"
      - "firstName"
      - "lastName"
      - "email"
      - "password"
      - "phone"
      - "userStatus"
      - "invalid_id"
      - "invalid_username"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: 'API failure cases'
    flow:
      - log: "Request without payload"
        post:
          url: "/user"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - hasProperty: "errorMessage"
      - think: 1

      - log: "Invalid headers"
        post:
          url: "/user"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}" 
          headers:
            Authorization: "Invalid"
          expect:
            - statusCode: 401
            - hasProperty: "errorMessage"
      - think: 1

      - log: "Invalid URL"
        post:
          url: "/invalidURL"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}" 
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
      - think: 1
      
      - log: "invalid id"
        post:
          url: "/user"
          json:
            id: "{{ invalid_id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}" 
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - hasProperty: "errorMessage"
      - think: 1
      
      - log: "invalid username"
        post:
          url: "/user"
          json:
            id: "{{ id }}"
            username: "{{ invalid_username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}" 
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - hasProperty: "errorMessage"
      - think: 1

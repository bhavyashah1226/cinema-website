# Test generated by RoostGPT for test api-spec using AI Type Open AI and AI Model gpt-4


# Test generated for /user_post for http method type POST in artillery framework

# RoostTestHash=fcaadbca4d


config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  plugins:
    expect: {}
  payload:
    path: "user_post_others.csv"
    fields:
      - "id"
      - "username"
      - "firstName"
      - "lastName"
      - "email"
      - "password"
      - "phone"
      - "userStatus"
    skipHeader: true

scenarios:
  - name: "Testing non-successful API requests"
    flow:
      # Invalid POST request with missing required fields in payload
      - post:
          url: "/v2/user"
          headers:
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
        think: 1

      # Invalid POST request with incorrect URL
      - post:
          url: "/v2/user/invalid"
          headers:
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 404
        think: 1

      # Invalid POST request with incorrect authentication
      - post:
          url: "/v2/user"
          headers:
            Authorization: "Bearer invalid_token"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 401
            - hasProperty: "message"
        think: 1

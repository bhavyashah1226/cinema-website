# Test generated by RoostGPT for test roostPostmanTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

# RoostTestHash=fcaadbca4d

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 1
      arrivalRate: 1
  payload:
    path: "user_post_others.csv"
    fields: ["username", "firstName", "lastName", "email", "password", "phone", "userStatus"]
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "scenario"
    flow:
      - log: "Posting with missing mandatory parameters in the request body"
        post:
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          url: "/user"
          json:
            id: 11
          expect:
            - statusCode: 400
            - hasProperty: "errors"
        # missing parameters like [username, password], so we expect a 400 and errors in response
      - think: 1
      - log: "Posting with invalid authorization token"
        post:
          headers:
            Authorization: "Invalid_Auth_Token"
          url: "/user"
          json:
            id: 11
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 401
            - hasProperty: "errors"
        # token is invalid, so we expect a 401 and errors in response
      - think: 1
      - log: "Posting to an invalid URL"
        post:
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          url: "/invalidUserUrl"
          json:
            id: 11
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 404
            - hasProperty: "errors"
        # invalid URL, so we expect a 404 and errors in response
      - think: 1

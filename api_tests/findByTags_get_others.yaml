# Test generated by RoostGPT for test api-spec using AI Type Open AI and AI Model gpt-4


# Test generated for /pet/findByTags_get for http method type GET in artillery framework

# RoostTestHash=c791547528


config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 2
  plugins:
    expect: {}
  payload:
    path: "findByTags_get_others.csv"
    fields:
      - "tags"
    skipHeader: true

scenarios:
  - name: "Non-success API responses test"
    flow:
      # Invalid auth token
      - log: "Testing with invalid auth token"
        get:
          url: "/v2/pet/findByTags?tags={{ tags }}"
          headers:
            petstore_auth: "Invalid_Token"
          expect:
            - statusCode: 401
        think: 1

      # Missing auth token
      - log: "Testing without auth token"
        get:
          url: "/v2/pet/findByTags?tags={{ tags }}"
          expect:
            - statusCode: 401
        think: 1

      # Invalid URL
      - log: "Testing with invalid URL"
        get:
          url: "/v2/pet/findByTags_invalid?tags={{ tags }}"
          headers:
            petstore_auth: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
        think: 1

      # Missing required query parameter
      - log: "Testing without required query parameter"
        get:
          url: "/v2/pet/findByTags"
          headers:
            petstore_auth: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
        think: 1

      # Invalid query parameter value
      - log: "Testing with invalid query parameter value"
        get:
          url: "/v2/pet/findByTags?tags=Invalid_Tag"
          headers:
            petstore_auth: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
        think: 1

      # Non-existing resource
      - log: "Testing with non-existing resource"
        get:
          url: "/v2/pet/findByTags?tags=NonExistingTag"
          headers:
            petstore_auth: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
        think: 1

// Test generated by RoostGPT for test restAssuredTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

// Test generated for /errors_get for http method type GET in rest-assured framework

// RoostTestHash=588ae64bad

package com.team.RoostTest;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import org.junit.Test;
import static io.restassured.RestAssured.*;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class ErrorsGetTest {
    
    final static String BASE_WIDTH_URL = System.getenv("BASE_URL");

    @Test
    public void errorsGetTest() {  
        // Assigning BASE_URL to Rest Assured
        RestAssured.baseURI = BASE_WIDTH_URL;
        
        String line;

        try (
            // Read CSV file  
            BufferedReader reader = new BufferedReader(new FileReader("src/test/java/com/team/RoostTest/errors_get.csv"))
        ) {  

            String[] headers = reader.readLine().split(",");

            // Iterating through each line in CSV file
            while ((line = reader.readLine()) != null) {  
                // Creating the map of headers and values
                Map<String, String> dataMap = getHeadersDataMap(headers, line.split(","));
  
                // Forming the URL
                String url = String.format("/errors");

                // GET request and checking the response
                validateResponseCode(
                    given().contentType(ContentType.JSON).get(url)
                );
            }  
        } catch (IOException e) {  
            e.printStackTrace();  
        }  
    }  

    private Map<String, String> getHeadersDataMap(String[] headers, String[] data) {
        Map<String, String> map = new HashMap<>();

        for (int i = 0 ; i < headers.length ; i++) {  
            map.put(headers[i], data[i]);  
        }

        return map;
    }

    private void validateResponseCode(Response response){
        // Checking the HTTP Status code
        if (response.statusCode() == 200) {
			System.out.println("Description: successful operation");
		} else {
		    System.out.println("Invalid Response Status Code: " + response.statusCode());
        }
    }
}

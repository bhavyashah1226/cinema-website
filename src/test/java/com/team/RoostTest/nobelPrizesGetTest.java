// Test generated by RoostGPT for test restAssuredTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

// RoostTestHash=4940f5c55b

import io.restassured.RestAssured;
import io.restassured.response.Response;
import org.junit.Test;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import static org.hamcrest.CoreMatchers.anyOf;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.greaterThanOrEqualTo;
import static org.hamcrest.Matchers.instanceOf;

public class nobelPrizesGetTest {

    private static final String BASE_URL = System.getenv("BASE_URL");

    @Test
    public void nobelPrizes_get_Test() {
        // Read CSV file
        try (BufferedReader reader = new BufferedReader(new FileReader("src/test/java/com/team/RoostTest/nobelPrizes_get.csv"))) {
            String headerLine = reader.readLine();
            String[] headers = headerLine.split(",");

            String line;
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");
 
                // Create a map of header to data
                Map<String, String> map = new HashMap<>();
                for (int i = 0; i < headers.length; i++) {
                    map.put(headers[i], data[i]);
                }

                Response response = RestAssured.with()
                        .baseUri(BASE_URL)
                        .pathParams(map)
                        .get("/nobelPrizes")
                        .then()
                        .extract()
                        .response();

                // Here you would use your specific response validations...
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
